/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IT17026376;

import IT17029896.CheckOut;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ACHINTHA~PC
 */
public class Updateresturant extends javax.swing.JInternalFrame {
   
    PreparedStatement pst = null;
    private Connection connection = null;
    private Statement statement = null;
    private ResultSet resultSet = null;
    private int menuId=0;
    private final String url = "jdbc:mysql://localhost:3306/hotelsystem";
    private final String user = "root";
    private final String password = "";
    private final String driver = "com.mysql.jdbc.Driver";
    private String mtype;
    private String foodName;
    private int ID;
    private double price;
    private String Dtype;
    private String dName;
    /**
     * Creates new form Updateresturant
     */
    public Updateresturant() {
        initComponents();
        showTableData1();
        showTableData2();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DNText = new javax.swing.JTextField();
        UpdateMBtn = new javax.swing.JButton();
        DeleteMBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        priceBox = new javax.swing.JTextField();
        UpdateDBtn = new javax.swing.JButton();
        DeleteDBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DrinksTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        MealTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AddMBtn = new javax.swing.JButton();
        AddDBtn = new javax.swing.JButton();
        MealTypeCombo = new javax.swing.JComboBox<String>();
        DTypeCombo = new javax.swing.JComboBox<String>();
        jLabel7 = new javax.swing.JLabel();
        FNText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        priceBox1 = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(50, 50, 86));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Meal Type");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Food Name");

        DNText.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N

        UpdateMBtn.setBackground(new java.awt.Color(100, 255, 218));
        UpdateMBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        UpdateMBtn.setText("Update Meal");
        UpdateMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateMBtnActionPerformed(evt);
            }
        });

        DeleteMBtn.setBackground(new java.awt.Color(100, 255, 218));
        DeleteMBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        DeleteMBtn.setText("Delete Meal");
        DeleteMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Drink Type");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Drink Name");

        priceBox.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N

        UpdateDBtn.setBackground(new java.awt.Color(100, 255, 218));
        UpdateDBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        UpdateDBtn.setText("Update Drinks");
        UpdateDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDBtnActionPerformed(evt);
            }
        });

        DeleteDBtn.setBackground(new java.awt.Color(100, 255, 218));
        DeleteDBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        DeleteDBtn.setText("Delete Drinks");
        DeleteDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDBtnActionPerformed(evt);
            }
        });

        DrinksTable.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        DrinksTable.setForeground(new java.awt.Color(50, 50, 86));
        DrinksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Drink Type", "Drink Name", "price"
            }
        ));
        DrinksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrinksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DrinksTable);

        MealTable.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        MealTable.setForeground(new java.awt.Color(50, 50, 86));
        MealTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Meal Type", "Food Name", "price"
            }
        ));
        MealTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MealTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(MealTable);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Update Meals");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Update Drinks");

        jLabel12.setBackground(new java.awt.Color(97, 212, 195));
        jLabel12.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("Menu Update");

        jButton1.setBackground(new java.awt.Color(100, 255, 218));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(100, 255, 218));
        jButton2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AddMBtn.setBackground(new java.awt.Color(100, 255, 218));
        AddMBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        AddMBtn.setText("Add Meal");
        AddMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMBtnActionPerformed(evt);
            }
        });

        AddDBtn.setBackground(new java.awt.Color(100, 255, 218));
        AddDBtn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        AddDBtn.setText("Add Drinks");
        AddDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDBtnActionPerformed(evt);
            }
        });

        MealTypeCombo.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        MealTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Meal Type", "Starters", "Main Cause", "dessert" }));
        MealTypeCombo.setToolTipText("");
        MealTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MealTypeComboActionPerformed(evt);
            }
        });

        DTypeCombo.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        DTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select Drink Type", "Juice", "softDrinks", "Liquor", "Beer", "Hot Drinks" }));
        DTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTypeComboActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Price");

        FNText.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Price");

        priceBox1.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(393, 393, 393)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(165, 165, 165))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(MealTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE))
                                    .addComponent(FNText, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(UpdateMBtn)
                                        .addGap(25, 25, 25)
                                        .addComponent(AddMBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addComponent(DeleteMBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(97, 97, 97)
                                        .addComponent(priceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton1)))
                                .addGap(0, 34, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(166, 166, 166))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DeleteDBtn)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                                            .addGap(20, 20, 20))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(priceBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel3)
                                                                .addComponent(jLabel4))
                                                            .addGap(97, 97, 97)
                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(DTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(DNText)))))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addGap(28, 28, 28)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel8)
                                                            .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(UpdateDBtn)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(AddDBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(55, 55, 55)))))
                                            .addGap(28, 28, 28)
                                            .addComponent(jButton2))))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(181, 181, 181))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(MealTypeCombo))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(FNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(DNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jLabel8)
                            .addComponent(priceBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateMBtn)
                            .addComponent(DeleteMBtn)
                            .addComponent(AddMBtn)
                            .addComponent(UpdateDBtn)
                            .addComponent(AddDBtn)
                            .addComponent(DeleteDBtn))))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

            public void showTableData1(){
        try{
          connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
            String sql1 = "SELECT meals.mtype,meals.foodName,menu.price FROM meals,menu WHERE meals.menuId=menu.ID ";
            pst = connection.prepareStatement(sql1);
            resultSet = pst.executeQuery();
            MealTable.setModel(DbUtils.resultSetToTableModel(resultSet));
           
             int i=0;
            while(resultSet.next())
            {
                String[][] contents = null;
                contents[i][0]=String.valueOf(ID);
                contents[i][1]=String.valueOf(mtype);
                contents[i][2]=String.valueOf(foodName);
                contents[i][3]=Double.valueOf(price).toString();
               
                i = i + 1;
               
            }
      
        }
        catch(Exception e){
          e.printStackTrace();
        }
      
    }
        public void showTableData2(){
        try{
            connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
            String sql2 = "SELECT drinks.Dtype,drinks.dName,menu.price FROM drinks,menu WHERE drinks.menuId = menu.ID  ";
            pst = connection.prepareStatement(sql2);
            resultSet = pst.executeQuery();
            DrinksTable.setModel(DbUtils.resultSetToTableModel(resultSet));
           
             int i=0;
            while(resultSet.next())
            {
                String[][] contents = null;
                contents[i][0]=String.valueOf(ID);
                contents[i][1]=String.valueOf(Dtype);
                contents[i][2]=String.valueOf(dName);
                contents[i][3]=Double.valueOf(price).toString();
               
                i = i + 1;
            }
       
        }
        catch(Exception e){
            
        }
    }
    private void UpdateMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateMBtnActionPerformed

          int x = JOptionPane.showConfirmDialog(null, "Do you realy want to update");
            if(x == 0){
     
        String mtype  = String.valueOf(MealTypeCombo.getSelectedItem());
        String fName = String.valueOf(FNText.getText());
        double price = Double.valueOf(priceBox.getText());
        
               try{
                     String sql3 ="SELECT menuId FROM meals WHERE foodName='"+fName+"'";
                     pst = connection.prepareStatement(sql3);
                    // resultSet = statement.executeQuery(sql3);
                while(resultSet.next()){
         
                  ID = resultSet.getInt("menuId");
                  
                   String sql4 =  "UPDATE menu SET price = "+priceBox.getText()+" WHERE ID="+ID;
                     
               connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
                pst = connection.prepareStatement(sql4);
                pst.executeUpdate();
                }        
            
                 
    
            JOptionPane.showMessageDialog(null, "Updated successfullly");

            showTableData1();
           
        }     
               catch(SQLException | HeadlessException e){
                   e.printStackTrace();
            JOptionPane.showMessageDialog(null,e);
            
        }
        }
    }//GEN-LAST:event_UpdateMBtnActionPerformed

    private void DeleteMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMBtnActionPerformed
        try{
            String sql = "DELETE FROM meals WHERE menuId ="+menuId;
            connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
            String user = "root";
            String password = "";
            String driver = "com.mysql.jdbc.Driver";
            pst = connection.prepareStatement(sql);
            pst.executeUpdate();
            
            String sql1 = "DELETE FROM menu WHERE ID="+ID;
            pst = connection.prepareStatement(sql1);
            pst.executeUpdate();
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_DeleteMBtnActionPerformed

    private void UpdateDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDBtnActionPerformed

             int x = JOptionPane.showConfirmDialog(null, "Do you realy want to update");
            if(x == 0){
     
        String Dtype  = String.valueOf(DTypeCombo.getSelectedItem());
        String DName = String.valueOf(DNText.getText());
        double price = Double.valueOf(priceBox1.getText());
        
               try{
                     String sql3 ="SELECT MAX(ID) FROM menu";
                     pst = connection.prepareStatement(sql3);
                    // resultSet = statement.executeQuery(sql3);
                while(resultSet.next()){
         
                  ID = resultSet.getInt("MAX(ID)");
                }        
            
                  String sql4 =  "UPDATE menu SET price = 0 WHERE ID="+ID;
                     
                connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
                pst = connection.prepareStatement(sql4);
                pst.executeUpdate();
           String sql =  "UPDATE drinks SET Dtype='"+Dtype+"',dName='"+DName+"' WHERE menuId="+menuId;
            
         
            pst = connection.prepareStatement(sql);
           
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated successfullly");

            showTableData2();
           
        }     
               catch(SQLException | HeadlessException e){
                   e.printStackTrace();
            JOptionPane.showMessageDialog(null,e);
            
        }
        }
    }//GEN-LAST:event_UpdateDBtnActionPerformed

    private void DeleteDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteDBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

          MealTypeCombo.setSelectedItem("");
          FNText.setText("");
          priceBox.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

          DTypeCombo.setSelectedItem("".toString());
          DNText.setText("");
          priceBox1.setText("");
                                 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void AddMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMBtnActionPerformed

        mtype  = String.valueOf(MealTypeCombo.getSelectedItem());
        String foodName = String.valueOf(FNText.getText());
        double price = Double.valueOf(priceBox.getText());
        Statement statement = null;
        
        
         int ID = 0;
        try{
               statement=connection.createStatement();
                String sql6 = "SELECT meals.mtype,meals.foodName,menu.price FROM meals,menu WHERE meals.menuId=menu.ID";
               // rs = pst.executeQuery(sql1);
                pst = connection.prepareStatement(sql6);
                
                    String sql4 =  "INSERT INTO menu(price) "
                      + "VALUES ("+price+")";
                connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
                pst = connection.prepareStatement(sql4);
                pst.executeUpdate();
                
                
                String sql7 ="SELECT MAX(ID) FROM menu";
                resultSet = statement.executeQuery(sql7);
                while(resultSet.next()){
         
                  ID = resultSet.getInt("MAX(ID)");
                }        
                String sql8 =  "INSERT INTO meals"
                   +"(menuId,mtype,foodName)"
                  + "VALUES ("+ID+",'"+mtype+"','"+foodName+"')";
               pst = connection.prepareStatement(sql8);
               pst.executeUpdate();
         
            JOptionPane.showMessageDialog(null, "Inserted successfullly");
             showTableData1();
        }     
               catch(SQLException | HeadlessException e){
                   e.printStackTrace();
            JOptionPane.showMessageDialog(null,e);
            
        }
    }//GEN-LAST:event_AddMBtnActionPerformed

    private void AddDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDBtnActionPerformed

        String Dtype  = String.valueOf(DTypeCombo.getSelectedItem());
        String DName = String.valueOf(DNText.getText());
        double price = Double.valueOf(priceBox1.getText());
        Statement statement = null;
        
        
         int ID = 0;
        try{
               
               statement=connection.createStatement();
                String sql1 = "SELECT drinks.Dtype,drinks.dName,menu.price FROM drinks,menu WHERE drinks.menuId=menu.ID";
                pst = connection.prepareStatement(sql1);
                
                    String sql4 =  "INSERT INTO menu(price) "
                      + "VALUES ("+price+")";
                connection = DriverManager.getConnection("jdbc:mysql://localhost/hotelsystem","root","");
                pst = connection.prepareStatement(sql4);
                pst.executeUpdate();
                
                
                String sql2 ="SELECT MAX(ID) FROM menu";
                resultSet = statement.executeQuery(sql2);
                while(resultSet.next()){
         
                  ID = resultSet.getInt("MAX(ID)");
                }        
                String sql3 =  "INSERT INTO drinks"
                   +"(menuId,Dtype,dName)"
                  + "VALUES ("+ID+",'"+Dtype+"','"+DName+"')";
               pst = connection.prepareStatement(sql3);
                pst.executeUpdate();
                
                      JOptionPane.showMessageDialog(null, "Inserted successfullly");
                     showTableData2();
           
        }     
               catch(SQLException | HeadlessException e){
                   e.printStackTrace();
            JOptionPane.showMessageDialog(null,e);
            
        }
    }//GEN-LAST:event_AddDBtnActionPerformed

    private void MealTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MealTypeComboActionPerformed

    }//GEN-LAST:event_MealTypeComboActionPerformed

    private void DTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTypeComboActionPerformed

    }//GEN-LAST:event_DTypeComboActionPerformed

    private void MealTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MealTableMouseClicked
       
        int r = MealTable.getSelectedRow();
        String mType = MealTable.getValueAt(r, 0).toString();
        String fName = MealTable.getValueAt(r, 1).toString();
        Double price = (Double) MealTable.getValueAt(r, 2);
        
        MealTypeCombo.setSelectedItem(mType);
        FNText.setText(fName);
        priceBox.setText(price.toString());
    }//GEN-LAST:event_MealTableMouseClicked

    private void DrinksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrinksTableMouseClicked

               
        int r = DrinksTable.getSelectedRow();
        String dType = DrinksTable.getValueAt(r, 0).toString();
        String dName = DrinksTable.getValueAt(r, 1).toString();
        Double price = (Double) DrinksTable.getValueAt(r, 2);
        
        DTypeCombo.setSelectedItem(dType);
        DNText.setText(dName);
        priceBox1.setText(price.toString());
        
    }//GEN-LAST:event_DrinksTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDBtn;
    private javax.swing.JButton AddMBtn;
    private javax.swing.JTextField DNText;
    private javax.swing.JComboBox<String> DTypeCombo;
    private javax.swing.JButton DeleteDBtn;
    private javax.swing.JButton DeleteMBtn;
    private javax.swing.JTable DrinksTable;
    private javax.swing.JTextField FNText;
    private javax.swing.JTable MealTable;
    private javax.swing.JComboBox<String> MealTypeCombo;
    private javax.swing.JButton UpdateDBtn;
    private javax.swing.JButton UpdateMBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceBox;
    private javax.swing.JTextField priceBox1;
    // End of variables declaration//GEN-END:variables
}
